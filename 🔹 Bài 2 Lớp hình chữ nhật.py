üîπ B√†i 2: L·ªõp h√¨nh ch·ªØ nh·∫≠t
Vi·∫øt l·ªõp Rectangle c√≥ thu·ªôc t√≠nh width v√† height.
Th√™m ph∆∞∆°ng th·ª©c:

area() ‚Üí Tr·∫£ v·ªÅ di·ªán t√≠ch.

perimeter() ‚Üí Tr·∫£ v·ªÅ chu vi.

üìå G·ª£i √Ω:

python
Sao ch√©p
Ch·ªânh s·ª≠a
rect = Rectangle(10, 5)
print(rect.area())       # 50
print(rect.perimeter())  # 30

Code

# B∆∞·ªõc 1: ƒê·ªãnh nghƒ©a l·ªõp Rectangle
class Rectangle:
    # B∆∞·ªõc 2: H√†m kh·ªüi t·∫°o ƒë·ªÉ g√°n chi·ªÅu r·ªông v√† chi·ªÅu cao
    def __init__(self, width, height):
        self.width = width      # thu·ªôc t√≠nh chi·ªÅu r·ªông
        self.height = height    # thu·ªôc t√≠nh chi·ªÅu cao

    # B∆∞·ªõc 3: Ph∆∞∆°ng th·ª©c t√≠nh di·ªán t√≠ch
    def area(self):
        return self.width * self.height

    # B∆∞·ªõc 4: Ph∆∞∆°ng th·ª©c t√≠nh chu vi
    def perimeter(self):
        return 2 * (self.width + self.height)

    # B·ªï sung (t√πy ch·ªçn): In ra h√¨nh ch·ªØ nh·∫≠t d·ªÖ hi·ªÉu
    def display(self):
        print(f"H√¨nh ch·ªØ nh·∫≠t: r·ªông {self.width}, cao {self.height}")
        print(f"  - Di·ªán t√≠ch: {self.area()}")
        print(f"  - Chu vi: {self.perimeter()}")

# T·∫°o m·ªôt ƒë·ªëi t∆∞·ª£ng h√¨nh ch·ªØ nh·∫≠t
rect1 = Rectangle(10, 5)

# G·ªçi c√°c ph∆∞∆°ng th·ª©c
rect1.display()